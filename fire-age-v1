/**
 * 
 * 05-2021 || Brasilia, Distrito Federal, Brasil
 * 
 *                !!! NOTA: 04-09-2021: Este script ja possui uma versão mais atual, na qual o calculo da idade do fogo foi alterada !!!
 *
 *
 * objetivo: Compor o tempo desde a ultima ocorrência de cicatrizes de fogo na série temporal
 * (2000 a 2019) do MapBiomas-Fogo (versão beta).
 * 
 * Instituto de Pesquisa Ambiental da Amazônia - IPAM
 * 
 * by: Camila Silva and Wallace Silva
 * 
 * wallace.silva@ipam.org.br
 * 
 * toró de idéias: {
   
   representação de dados rasterizados para modelagem do processamento:

   coleção de cicatrizes anuais:{
     2000:  [ [ 0,  1 ],  [ 0,  0 ],  [ 0 , 0 ] ],
     2001:  [ [ 0,  1 ],  [ 1,  0 ],  [ 0 , 0 ] ],
     2002:  [ [ 0,  0 ],  [ 0,  0 ],  [ 0 , 0 ] ],
     2003:  [ [ 0,  0 ],  [ 0,  0 ],  [ 0 , 1 ] ],
   },
   
   colelção da idade do fogo:{
     2000:  [ [ 0,  1 ],  [ 0,  0 ],  [ 0,  0 ] ],
     2001:  [ [ 0,  1 ],  [ 1,  0 ],  [ 0,  0 ] ],
     2002:  [ [ 0,  2 ],  [ 2,  0 ],  [ 0,  0 ] ],
     2003:  [ [ 0,  3 ],  [ 3,  0 ],  [ 0,  1 ] ],
   },
     
    Regras de negócio: [
      todos os pixels marcados como fogo no primeiro ano da série possuem valor igual a 1,
      apartir do segundo ano:[
         -  os pixels que tiverem recorrencia de fogo recebem mascara de valor 1,
         -  os pixels que ja pegaram fogo em anos anteriores mas não pegaram fogo no ano em questão, somam 1 aos
         pixels que 
      ]
    ]
     
     Estrategia no gee :
        - Construir uma coleção de imagens de cicatrizes de fogo e iterar uma função sobre os elementos da lista,
        consideranto o retorno da função aplicada ao elemento anterior.
        - Essa estratégia é possivel por meio da estrutura de repetição .iterate(), que recebe como argumento uma
        função e um objeto (opicional) como estado inicial.
          - A função, escrita pelo usuario, deve considerar dois argumentos, o elemento da lista e o valor de retorno
          da iteração anterior. 
          - O estado inicial da função, é utilizado para configurar uma espécie de "pré-retorno", utilizado como 
          argumento de entrada da função na passagem pelo primento elemento da lista
          - não é possivel debugar a função com print, como alternativa é necessario 
          programar um retorno valido a analisar ele.
          - o gee parece "esquecer" o tipo dos objetos, sendo necessario redeclarar os seus tipos

   }
 * 
*/

//  --- --- --- --- --- ---  ----  --- ---  --- ---  ---  ---  ---  ---  --- --- ---
var burned_cover = 'projects/mapbiomas-workspace/public/collection5/mapbiomas_collection50_burned_cover_v1';

var image = ee.Image(burned_cover);

var list = ee.List.sequence(2001,2019,1);

var collection = list
  .getInfo()
  .map(function(year){
    return ee.Image(1)
      .updateMask(image.select('cover_'+year))
      .rename('cover')
      .set('year',year);
});

collection = ee.ImageCollection(collection);

print(collection);

function fireAge (current, previous){
  var fireThisYear = collection
    .filter(ee.Filter.eq('year',current))
    .mosaic();

  var alreadyBurned = collection
    .filter(ee.Filter.lte('year',current))
    .mosaic();
  alreadyBurned = ee.Image(1)
    .updateMask(alreadyBurned);
  
  previous = ee.Image(previous)
    .add(alreadyBurned);

  var newImage = previous
    .blend(fireThisYear);
  
  return ee.Image(newImage);
}

var first = ee.Image(0);

var collectionfireAge = list.iterate(fireAge,first);

print(collectionfireAge);

var palette = [
  ['ffffff','F8D71F','DAA118','BD6C12','9F360B','810004','4D0709'],
  ['001219','000080','0000ff','0a9396','005f73','94d2bd','ee9b00','ca6702','bb3e03','ae2012','9b2226','800000']
];
palette = palette[1];

collectionfireAge = ee.Image(collectionfireAge);

//  --- --- --- --- --- ---  ----  --- ---  --- ---  ---  ---  ---  ---  --- --- ---

Map.addLayer(collectionfireAge,{palette:palette.reverse()},'idade do fogo');
Map.addLayer(collection.sum(),{palette:palette,min:1,max:19},'traditional frequence', false);

var animation = require('users/gena/packages:animation');
  collection = collection.map(function(image){
    return image.set({
      label:ee.String('ano -> ').cat(image.get('year'))
    });
  });

animation.animate(collection, {label: 'label', maxFrames: 60});

//  --- --- --- --- --- ---  ----  --- ---  --- ---  ---  ---  ---  ---  --- --- ---

function colorbar (palette,listStrings,title){
          // Create the color bar for the legend.
          var colorBar = ui.Thumbnail({
            image: ee.Image.pixelLonLat().select(0),
            params: {
              bbox: [0, 0, 1, 0.1],
              dimensions: '100x10',
              format: 'png',
              min: 0,
              max: 1,
              palette: palette,
            },
            style: {
              stretch: 'horizontal',
              maxHeight: '6px',
              width:'250px',
              fontSize:'11px',
              margin:'0 0 0 0',
              backgroundColor:'ffffffdd'
              
            },
          });
          // Create a panel with three numbers for the legend.
          
          var legendLabels = ui.Panel({
            widgets: [
              ui.Label(listStrings[0], {fontSize:'10px',margin:'0 0 0 0',backgroundColor:'ffffffdd'}),
              ui.Label(listStrings[1], {fontSize:'10px',margin:'0 0 0 0', textAlign: 'center', stretch: 'horizontal',backgroundColor:'ffffffdd'}),
              ui.Label(listStrings[2], {fontSize:'10px',margin:'0 0 0 0',backgroundColor:'ffffffdd'})
            ],
            layout: ui.Panel.Layout.flow('horizontal'),
            style: {
              backgroundColor:'ffffffdd'
              
            },
          });
          var titleColorBar = ui.Label({
            value: title,
            style: {
              fontWeight: 'bold',
              fontSize:'12px',
              margin:'0 0 0 0',
              backgroundColor:'ffffffdd'
              
            }
          });
          return ui.Panel([titleColorBar, colorBar, legendLabels],ui.Panel.Layout.flow('vertical'));
  }

var panel = ui.Panel({
  widgets:colorbar(palette,['min','','max'],'tempo desde de o ultimo evento de fogo'),
  layout:ui.Panel.Layout.Flow('vertical'),
  style:{
    margin:'0 0 0 0',
    backgroundColor:'ffffffdd',
    position:'bottom-left',
  }
});

Map.add(panel);
//  --- --- --- --- --- ---  ----  --- ---  --- ---  ---  ---  ---  ---  --- --- ---
